{"version":3,"sources":["webpack:///../@gianfaye/gatsby-theme/src/sections/projects/Projects.List.tsx","webpack:///../@gianfaye/gatsby-theme/src/components/Navigation/Navigation.Paginator.tsx","webpack:///../@gianfaye/gatsby-theme/src/components/WorksList/Works.List.tsx","webpack:///../@gianfaye/gatsby-theme/src/sections/works/Works.Hero.tsx","webpack:///../@gianfaye/gatsby-theme/src/templates/projects.template.tsx"],"names":["ProjectsList","projects","alwaysShowAllDetails","hasOnlyOneProject","length","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","getGridLayout","projectPairs","reduce","result","value","index","array","push","slice","useEffect","ProjectsListContainer","style","opacity","map","ap","isEven","isOdd","List","key","reverse","ListItem","project","narrow","hasOverflow","title","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","ProjectLink","to","slug","data-a11y","Item","ImageContainer","src","ProjectContent","ProjectTaxonomy","className","work","date","Title","dark","Excerpt","excerpt","MetaData","categories","limitToTwoLines","css","mediaqueries","phablet","showDetails","p","desktop","tablet","theme","colors","card","Headings","h2","fonts","sansSerif","primary","serif","grey","lightGrey","Link","accent","Paginator","maxPages","count","props","pageCount","current","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","rel","href","Frame","PageButton","getPageLinks","MobileReference","aria-hidden","previousPage","pagesRange","range","truncatedRange","unshift","splice","Set","page","i","Spacer","PageNumberBUtton","Component","paginationItemMixin","desktop_up","WorksList","works","selectedWork","useState","isOpen","setIsOpen","fill","useColorMode","hasSelectedWork","worksBlank","id","name","avatar","bio","worksPage","featured","color","worksWithDefaultAll","WorksContainer","onClick","CoWorksList","NameContainer","IconContainer","ToggleOpen","onOutsideClick","CoWorksListOpen","IconOpenContainer","ToggleClose","CoWorksListItemOpen","WorkLink","as","WorkNameOpen","background","colorModeTransition","secondary","WorkHero","setGridLayout","site","edges","node","siteMetadata","Section","HeadingContainer","HeroHeading","HeroHeadingLabel","HeroSubheading","hover","active","ProjectsPage","location","pageContext","group","additionalContext","pathname","ProjectsPaginator","show","gradient"],"mappings":"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","file":"component---gianfaye-gatsby-theme-src-templates-projects-template-tsx-94edd781f147b1dfe835.js","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nimport Headings from '@components/Headings';\nimport Image, { ImagePlaceholder } from '@components/Image';\n\nimport mediaqueries from '@styles/media';\nimport { IProject } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\nimport ProjectCategories from \"../project/Project.Categories\";\nimport ProjectWorks from \"../project/Project.Works\";\n\n/**\n * Tiles\n * [FEATURED]\n * [SHORT], [LONG]\n * [SHORT], [SHORT], [SHORT]\n * [SHORT], [SHORT], [SHORT]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ProjectsListProps {\n  projects: IProject[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ProjectsListItemProps {\n  project: IProject;\n  narrow?: boolean;\n}\n\nconst ProjectsList: React.FC<ProjectsListProps> = ({\n                                                     projects,\n                                                     alwaysShowAllDetails,\n                                                   }) => {\n  if (!projects) return null;\n\n  const hasOnlyOneProject = projects.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  /**\n   * We're taking the flat array of projects [{}, {}, {}...]\n   * and turning it into an array of pairs of projects [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  //const latestProject = projects[0];\n  //console.log('Projects List latestProject', latestProject);\n\n  const projectPairs = projects.reduce((result, value, index, array) => {\n    //console.log('Projects List projectPairs result', result);\n    // console.log('Projects List projectPairs value', value);\n    // console.log('Projects List projectPairs index', index);\n    // console.log('Projects List projectPairs array', array);\n\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []);\n  //console.log('Projects List projectPairs', projectPairs);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ProjectsListContainer\n      style={{ opacity: hasSetGridLayout ? 1 : 0 }}\n      alwaysShowAllDetails={alwaysShowAllDetails}\n    >\n      {projectPairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        //console.log('Projects List ap', ap);\n\n        return (\n          <List\n            key={index}\n            gridLayout={gridLayout}\n            hasOnlyOneProject={hasOnlyOneProject}\n            reverse={isOdd}\n          >\n            <ListItem project={ap[0]} narrow={isOdd} />\n            <ListItem project={ap[1]} narrow={isEven} />\n          </List>\n        );\n      })}\n    </ProjectsListContainer>\n  );\n};\n\nexport default ProjectsList;\n\nconst ListItem: React.FC<ProjectsListItemProps> = ({ project, narrow }) => {\n  if (!project) return null;\n\n  //const { gridLayout } = useContext(GridLayoutContext);\n  let gridLayout = 'rows';\n  const hasOverflow = narrow && project.title.length > 35;\n  const imageSource = narrow ? project.hero.narrow : project.hero.regular;\n  const hasHeroImage =\n    imageSource &&\n    Object.keys(imageSource).length !== 0 &&\n    imageSource.constructor === Object;\n\n  return (\n    <ProjectLink to={project.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <ProjectContent\n          gridLayout={gridLayout}>\n          <ProjectTaxonomy\n            gridLayout={gridLayout}>\n            <span className=\"Project__Works\">{project.work}</span>\n            <span className=\"Project__Date\">{project.date}</span>\n          </ProjectTaxonomy>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {project.title}\n          </Title>\n          <Excerpt\n            gridLayout={gridLayout}\n          >\n            {project.excerpt}\n          </Excerpt>\n          <MetaData\n            gridLayout={gridLayout}>\n            Client: <span className=\"Project__Categories\">{project.categories}</span>\n          </MetaData>\n        </ProjectContent>\n      </Item>\n    </ProjectLink>\n  );\n};\n\nconst wide = '3fr';\nconst narrow = '2fr';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  //display: -webkit-box;\n  display: inline;\n  white-space: normal;\n  overflow: hidden;\n  //min-height: 84px;\n  margin-bottom: 25px;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ProjectsListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\n// const listTile = p => css`\n//   position: relative;\n//   display: grid;\n//   grid-template-columns: ${p.reverse\n//   ? `${narrow} ${wide}`\n//   : `${wide} ${narrow}`};\n//   grid-template-rows: 2;\n//   column-gap: 30px;\n//\n//   &:not(:last-child) {\n//     margin-bottom: 35px;\n//   }\n//\n//   ${mediaqueries.desktop_medium`\n//     grid-template-columns: 1fr 1fr;\n//   `}\n//\n//   ${mediaqueries.tablet`\n//     grid-template-columns: 1fr;\n//\n//     &:not(:last-child) {\n//       margin-bottom: 0;\n//     }\n//   `}\n// `;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  //grid-template-columns: 1fr 488px;\n  //grid-column-gap: 96px;\n  //grid-template-columns: 1fr 570px;\n  grid-template-columns: 1fr 460px;\n  grid-column-gap: 0;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 30px;\n  `}\n`;\n\n// If only 1 project, dont create 2 rows.\nconst listRow = p => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneProject ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneProject: boolean;\n}>`\n  ${listRow}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${listItemRow}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '370px' : '380px')};\n  overflow: hidden;\n  z-index: 300;\n  display: block;\n\n  & > div {\n    height: 100%;\n    transition: transform 0.3s var(--ease-out-quad),\n    scale 0.3s var(--ease-out-quad);\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    //margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n  `}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 28px;\n  font-weight: 400;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-transform: uppercase;\n  margin-bottom: ${p =>\n  p.hasOverflow && p.gridLayout === 'tiles' ? '25px' : '10px'};\n  ${limitToTwoLines};\n  background-size: 0 100%;\n  background-repeat: no-repeat;\n  text-decoration: none;\n  -webkit-transition: background-size .8s ease;\n  transition: background-size .8s ease;\n  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(99%,transparent),color-stop(1%,${p => p.theme.colors.primary}));\n  background-image: linear-gradient(180deg,transparent 99%,${p => p.theme.colors.primary} 0);\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;\n    padding: 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  display: block;\n  margin-top: 5px;\n  font-size: 16px;\n  line-height: 26px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: 30px;\n  color: ${p => p.theme.colors.grey};\n  max-width: 500px;\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom; 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst ProjectContent = styled.div<{\n  gridLayout: string;\n}>`\n  padding: 30px;\n  background: ${p => p.theme.colors.card};\n  //margin:  ${p => (p.gridLayout === 'tiles' ? '-150px 30px 20px 30px' : '110px 0 -30px -100px')};\n  //margin:  ${p => (p.gridLayout === 'tiles' ? '-100px 30px 20px 30px' : '110px -100px -30px 0')};\n  //min-height: ${p => (p.gridLayout === 'tiles' ? 'unset' : '330px')};\n  //margin: 140px 0 0px -100px;\n  margin: 80px 0 0px -100px;\n  z-index: 600;\n  display: block;\n  position: relative;\n  //border: 1px solid ${p => p.theme.colors.primary};\n\n  ${mediaqueries.tablet`\n    margin: 0 auto;\n    width: 100%;\n  `}\n`;\n\nconst MetaData = styled.div<{\n  gridLayout: string;\n}>`\n  font-weight: 400;\n  font-size: 12px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.primary};\n  letter-spacing: 2px;\n  margin-top: ${p => (p.gridLayout === 'tiles' ? '20px' : '10px')};\n  //opacity: 0.5;\n  //font-style: italic;\n\n  .Project__Categories{\n    color: ${p => p.theme.colors.card};\n    background: ${p => p.theme.colors.primary};\n    display: inline;\n    padding: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding: 0;\n  `}\n`;\n\nconst ProjectTaxonomy = styled.div<{\n  gridLayout: string;\n}>`\n  font-weight: 600;\n  font-size: 12px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  text-transform: uppercase;\n  opacity: 0.8;\n  letter-spacing: 2px;\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '20px' : '20px')};\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n\n  .Project__Works{\n    margin-right: 5px;\n    color: ${p => p.theme.colors.lightGrey};\n    margin-left: 1px;\n  }\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding: 0;\n  `}\n`;\n\nconst ProjectLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n  //border-bottom: 5px solid ${p => p.theme.colors.primary};\n\n  &:hover ${ImageContainer} > div, &:focus ${ImageContainer} > div{\n      0 30px 50px -30px rgba(0, 0, 0, 0.3);\n    transform: scale(1.1);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    //color: ${p => p.theme.colors.accent};\n    background-size: 100% 100%;\n    cursor: pointer;\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    //border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport mediaqueries from \"@styles/media\";\nimport { range } from \"@utils\";\n\nimport { IPaginator } from \"@types\";\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n  count = this.props.pageCount;\n  current = this.props.index;\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const current = this.current;\n    const count = this.count;\n    const maxPages = this.maxPages;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(\n        pagesRange.length - 1 - maxPages,\n        0,\n        pagesRange[0] - 1,\n      );\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden={true} />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === \"/\") {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"page/\" + n;\n    } else {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"/page/\" + n;\n    }\n  };\n\n  render() {\n    const count = this.count;\n    const current = this.current;\n\n    if (count <= 1) return null;\n\n    const previousPath = this.previousPath;\n    const nextPath = this.nextPath;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n\nconst paginationItemMixin = p => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 16px;\n  text-decoration: none;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: \"...\";\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.primary};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { useColorMode } from \"theme-ui\";\n\nimport Image from '@components/Image';\nimport { IWork } from '@types';\nimport Icons from \"@icons\";\nimport mediaqueries from \"@styles/media\";\n\nconst WorksList: React.FC<IWork> = ({ works, selectedWork }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [colorMode] = useColorMode();\n\n  const fill = colorMode === \"dark\" ? \"#fff\" : \"#000\";\n\n  const hasSelectedWork = Object.keys(selectedWork).length;\n\n  const worksBlank = {\n    id: 0,\n    name: 'projects I worked on *',\n    avatar: '',\n    bio: '',\n    slug: '/projects',\n    worksPage: true,\n    featured: false,\n    color: ''\n  };\n\n  const worksWithDefaultAll = [ worksBlank, ...works ];\n\n  return (\n    <WorksContainer onClick={() => setIsOpen(!isOpen)} isOpen={isOpen}>\n      {/*{ selectedWork.avatar &&*/}\n      {/*  <WorkBackground src={selectedWork.avatar.large} />*/}\n      {/*}*/}\n      <CoWorksList /*style={listWidth}*/>\n        {/*{works.map((work, index) => (*/}\n        {/*  <CoWorkAvatar style={{ left: `${index * 15}px` }} key={work.name}>*/}\n        {/*    <RoundedImage src={work.avatar.small} />*/}\n        {/*  </CoWorkAvatar>*/}\n        {/*))}*/}\n      </CoWorksList>\n      <NameContainer>{ hasSelectedWork ? (`${selectedWork.name} projects`) : worksBlank.name}</NameContainer>\n      <IconContainer>\n        <Icons.ToggleOpen fill={fill} />\n      </IconContainer>\n\n\n      {isOpen && (\n        <OutsideClickHandler onOutsideClick={() => setIsOpen(!isOpen)}>\n          <CoWorksListOpen>\n            <IconOpenContainer>\n              <Icons.ToggleClose fill={fill} />\n            </IconOpenContainer>\n            {worksWithDefaultAll.map((work, index) => (\n              <CoWorksListItemOpen key={work.name}>\n                <WorkLink\n                  as={work.worksPage ? Link : \"div\"}\n                  to={work.slug}\n                >\n                  {/*<CoWorkAvatarOpen>*/}\n                  {/*  <RoundedImage src={work.avatar.small} />*/}\n                  {/*</CoWorkAvatarOpen>*/}\n                  <WorkNameOpen>{work.name}</WorkNameOpen>\n                </WorkLink>\n              </CoWorksListItemOpen>\n            ))}\n          </CoWorksListOpen>\n        </OutsideClickHandler>\n      )}\n\n      {/*{works.map((work, index) => {*/}\n      {/*  //return console.log('work', work);*/}\n      {/*  console.log('work.color', work.color);*/}\n      {/*  return (*/}\n      {/*    <WorkContainer key={index} color={work.color}>*/}\n      {/*      <WorksAvatar*/}\n      {/*        as={work.worksPage ? Link : 'div'}*/}\n      {/*        to={work.slug}*/}\n      {/*      >*/}\n      {/*        <WorksAvatarInner>*/}\n      {/*          <RoundedImage*/}\n      {/*            isEven={index % 2 == 0}*/}\n      {/*            src={work.avatar.large}*/}\n      {/*          />*/}\n      {/*        </WorksAvatarInner>*/}\n      {/*      </WorksAvatar>*/}\n      {/*      <div>*/}\n      {/*        { work.id == selectedWork.id ? 'SELECTED TOPIC' : 'not selected'}*/}\n      {/*      </div>*/}\n      {/*      <WorksText dangerouslySetInnerHTML={{ __html: work.name }} />*/}\n      {/*    </WorkContainer>*/}\n      {/*  );*/}\n      {/*})}*/}\n    </WorksContainer>\n  );\n};\n\nexport default WorksList;\n\n// const WorksContainer = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-gap: 16px;\n//   //grid-template-columns: repeat(auto-fill,minmax(150px,215px));\n//   //grid-template-columns: repeat(auto-fill,minmax(200px,365px));\n//   grid-template-columns: repeat(auto-fill,minmax(250px,265px));\n//   justify-content: center;\n// `;\n\nconst WorksContainer = styled.div<{ isOpen: boolean }>`\n  position: relative;\n  //display: flex;\n  display: inline-block;\n  align-items: center;\n  //font-size: 18px;\n  color: ${p => p.theme.colors.grey};\n  letter-spacing: 1px;\n  cursor: pointer;\n  vertical-align: middle;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: -20px;\n    right: -20px;\n    top: -16px;\n    bottom: -16px;\n    background: ${p => p.theme.colors.card};\n    box-shadow: ${p =>\n  p.isOpen ? \"none\" : \" 0px 0px 15px rgba(0, 0, 0, 0.1)\"};\n    border-radius: 5px;\n    z-index: 0;\n    transition: opacity 0.3s;\n    cursor: pointer;\n    opacity: 0;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n\n\n  ${mediaqueries.phablet`\n    //font-size: 14px;\n    align-items: center;\n\n    &::before {\n      box-shadow: none;\n      bottom: -30px;\n      background: transparent;\n    }\n\n    strong {\n      display: block;\n      font-weight: semi-bold;\n      margin-top: 6px;\n    }\n  `}\n`;\n\nconst WorkContainer = styled.div<{ color: string }>`\n  position: relative;\n  display: flex;\n  height: 304px;\n  cursor: pointer;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  border-radius: 7px;\n  padding: 24px 0;\n  background-color: #${p => p.color};\n  background-repeat: no-repeat;\n  background-size: 100%;\n  border: 1px solid rgba(29,29,29,.1);\n  overflow: hidden;\n`;\n\nconst WorksAvatar = styled.div`\n  display: block;\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nconst RoundedImage = styled(Image)<{ isEven: boolean }>`\n  height: 180px;\n\n  img {\n    object-position: ${p => p.isEven ? `left` : `right`} !important;\n    //object-position: right !important;\n  }\n`;\n\nconst WorkBackground = styled(Image)<{ isEven: boolean }>`\n  width: 300px;\n  position: absolute !important;\n  left: -20vw;\n  top: -30px;\n  z-index: 0;\n  display: block;\n  filter: grayscale(100%);\n}\n`;\n\nconst WorksAvatarInner = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst WorksText = styled.p`\n  max-width: 430px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  text-align: left;\n  padding: 0 60px 0 30px;\n  font-weight: bold;\n  display: block;\n  //opacity: 0.5;\n  line-height: 1.45;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  //color: ${p => p.theme.colors.grey};\n\n  a {\n    //color: ${p => p.theme.colors.grey};\n    text-decoration: underline;\n  }\n`;\n\n\nconst NameContainer = styled.strong`\n  position: relative;\n  //max-width: 260px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n  //font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  border-bottom: 5px solid;\n  //text-transform: uppercase;\n  //font-size: 14px;\n  font-weight: 400;\n  display: inline-block;\n  margin-top: 4px;\n  vertical-align: middle;\n\n  // ${mediaqueries.desktop`\n  //   max-width: 170px;\n  // `}\n  //\n  // ${mediaqueries.phablet`\n  //   max-width: 200px;\n  // `}\n`;\n\nconst IconContainer = styled.div`\n  position: relative;\n  cursor: pointer;\n  margin-left: 10px;\n  display: inline-block;\n\n  svg{\n    width: 30px;\n    height: 30px;\n  }\n\n  ${mediaqueries.phablet`\n    position: absolute;\n    right: -30px;\n    bottom: 0px;\n    top: 3px;\n    height: 100%;\n  `}\n`;\n\nconst IconOpenContainer = styled.div`\n  position: absolute;\n  cursor: pointer;\n  top: -10px;\n  right: 21px;\n\n  ${mediaqueries.desktop`\n    top: 10px;\n  `}\n\n  ${mediaqueries.phablet`\n    top: 20px;\n  `}\n\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n\n\nconst CoWorksList = styled.div`\n  position: relative;\n  //height: 25px;\n  //margin-right: 15px;\n  width: auto;\n  min-width: 300px;\n\n  ${mediaqueries.phablet`\n    display: none;\n  `}\n`;\n\n\nconst CoWorksListOpen = styled.ul`\n  position: absolute;\n  z-index: 2;\n  left: -21px;\n  right: -21px;\n  //top: -19px;\n  top: 105px;\n  padding: 50px;\n  background: ${p => p.theme.colors.card};\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  cursor: pointer;\n  list-style: none;\n  transform: translateY(-2px);\n  max-height: 500px;\n  overflow-y: scroll;\n  display: grid;\n  //width: 100%;\n  grid-gap: 16px;\n  grid-template-columns: repeat(auto-fill,minmax(150px,300px));\n\n  ${mediaqueries.desktop`\n    display: block;\n    left: 0;\n  `}\n\n  ${mediaqueries.phablet`\n    width: 280px;\n    padding: 30px;\n    top: 45px;\n  `}\n`;\n\nconst CoWorksListItemOpen = styled.li`\n  a {\n    width: 100%;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst CoWorkAvatarOpen = styled.div`\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  margin-right: 15px;\n  background: ${p => p.theme.colors.grey};\n  overflow: hidden;\n  pointer-events: none;\n\n  .gatsby-image-wrapper > div {\n    padding-bottom: 100% !important;\n    overflow: hidden;\n  }\n`;\n\nconst CoWorkAvatar = styled.div`\n  position: absolute;\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  z-index: 1;\n  background: ${p => p.theme.colors.grey};\n  box-shadow: 0 0 0 2px ${p => p.theme.colors.background};\n  transition: box-shadow 0.25s ease;\n  overflow: hidden;\n  pointer-events: none;\n\n  .gatsby-image-wrapper > div {\n    padding-bottom: 100% !important;\n    overflow: hidden;\n  }\n\n  ${mediaqueries.phablet`\n    display: none;\n  `}\n`;\n\nconst WorkLink = styled.div`\n  display: flex;\n  align-items: center;\n  color: inherit;\n  margin-left: 10px;\n  letter-spacing: 1px;\n\n  strong {\n    transition: ${p => p.theme.colorModeTransition};\n  }\n\n  &:hover strong {\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst WorkNameOpen = styled.strong`\n  position: relative;\n  cursor: pointer;\n  color: ${p => p.theme.colors.secondary};\n  font-weight: 400;\n  font-size: 16px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  padding-bottom: 3px;\n\n  &:hover{\n    padding-bottom: 1px;\n    border-bottom: 1px solid ${p => p.theme.colors.primary};\n  }\n`;\n\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Work from '@components/Work';\nimport WorksList from '@components/WorksList';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IWork } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\n\nconst workQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst WorkHero: React.FC<IWork> = ({ works, work }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n\n  const results = useStaticQuery(workQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  //const featuredWork = works.find(work => work.featured);\n\n  // if (!featuredWork) {\n  //   throw new Error(`\n  //     No featured Work found.\n  //     Please ensure you have at least featured Work.\n  // `);\n  // }\n\n  return (\n    <Section narrow id=\"Projects__Hero\">\n      <HeadingContainer>\n        {/*<HeroHeading dangerouslySetInnerHTML={{ __html: 'Explore works I post about' }} />*/}\n        <HeroHeading>\n          <HeroHeadingLabel>Explore</HeroHeadingLabel>\n          <WorksList works={works} selectedWork={work} />\n        </HeroHeading>\n        <HeroSubheading>\n          * That are not under NDA &#x1f937; Everything I did for the past 6 years can't be added here.\n        </HeroSubheading>\n      </HeadingContainer>\n      {/*<SubheadingContainer>*/}\n        {/*<Work works={works} />*/}\n        {/*<GridControlsContainer>*/}\n        {/*  <GridButton*/}\n        {/*    onClick={() => setGridLayout('tiles')}*/}\n        {/*    active={tilesIsActive}*/}\n        {/*    data-a11y=\"false\"*/}\n        {/*    title=\"Show project in Tile grid\"*/}\n        {/*    aria-label=\"Show project in Tile grid\"*/}\n        {/*  >*/}\n        {/*    <Icons.Tiles />*/}\n        {/*  </GridButton>*/}\n        {/*  <GridButton*/}\n        {/*    onClick={() => setGridLayout('rows')}*/}\n        {/*    active={!tilesIsActive}*/}\n        {/*    data-a11y=\"false\"*/}\n        {/*    title=\"Show project in Row grid\"*/}\n        {/*    aria-label=\"Show project in Row grid\"*/}\n        {/*  >*/}\n        {/*    <Icons.Rows />*/}\n        {/*  </GridButton>*/}\n        {/*</GridControlsContainer>*/}\n      {/*</SubheadingContainer>*/}\n    </Section>\n  );\n};\n\nexport default WorkHero;\n\nconst SubheadingContainer = styled.div`\n  // display: flex;\n  // align-items: center;\n  // justify-content: space-between;\n  // margin-bottom: 100px;\n  padding: 20px 0;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 110px;\n  margin: 0 auto;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  //margin: 100px 0;\n  margin: 80px 0 60px 0;\n  display: inline-block;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n\n  ${mediaqueries.phablet`\n    margin: 60px 0 80px 0;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 80px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n  vertical-align: middle;\n  display: table-cell;\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 24px;\n  `}\n`;\n\nconst HeroSubheading = styled.span`\n  display: block;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  margin-right: 35px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-align: right;\n  text-transform: uppercase;\n  margin-top: 20px;\n  letter-spacing: 0.5px;\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 28px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 16px;\n  `}\n`;\n\nconst HeroHeadingLabel = styled.span`\n   vertical-align: middle;\n   margin-right: 15px;\n\n  ${mediaqueries.phablet`\n    margin-right: 8px;\n    display: block;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport SEO from \"@components/SEO\";\nimport Layout from \"@components/Layout\";\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\n\nimport WorksHero from \"../sections/works/Works.Hero\";\nimport ProjectsList from \"../sections/projects/Projects.List\";\n\nimport { TemplateProject } from \"@types\";\n\nconst ProjectsPage: TemplateProject = ({ location, pageContext }) => {\n  const projects = pageContext.group;\n  const works = pageContext.additionalContext.works;\n  const selectedWork = {};\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <WorksHero works={works} work={selectedWork} />\n      <Section narrow>\n        <ProjectsList projects={projects} />\n        <ProjectsPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ProjectsPaginator>\n      </Section>\n      {/*<ProjectsGradient />*/}\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n\nconst ProjectsGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ProjectsPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n  text-align: center;\n`;\n"],"sourceRoot":""}