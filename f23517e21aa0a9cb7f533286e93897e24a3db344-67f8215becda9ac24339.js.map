{"version":3,"sources":["webpack:///../@gianfaye/gatsby-theme/src/sections/projects/Projects.List.tsx","webpack:///../@gianfaye/gatsby-theme/src/components/Headings/Headings.tsx","webpack:///../@gianfaye/gatsby-theme/src/components/Navigation/Navigation.Paginator.tsx","webpack:///../@gianfaye/gatsby-theme/src/components/WorksList/Works.List.tsx","webpack:///../@gianfaye/gatsby-theme/src/sections/works/Works.Hero.tsx","webpack:///../node_modules/@babel/runtime/helpers/esm/createClass.js"],"names":["ProjectsList","projects","alwaysShowAllDetails","hasOnlyOneProject","length","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","getGridLayout","projectPairs","reduce","result","value","index","array","push","slice","useEffect","ProjectsListContainer","style","opacity","map","ap","isEven","isOdd","List","key","reverse","ListItem","project","narrow","hasOverflow","title","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","ProjectLink","to","slug","data-a11y","Item","ImageContainer","src","ProjectContent","ProjectTaxonomy","className","work","date","Title","dark","Excerpt","excerpt","MetaData","categories","limitToTwoLines","css","mediaqueries","phablet","showDetails","p","desktop","tablet","theme","colors","card","Headings","h2","fonts","sansSerif","primary","serif","grey","lightGrey","Link","accent","commonStyles","h1","h3","h4","h5","h6","Paginator","maxPages","count","props","pageCount","current","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","rel","href","Frame","PageButton","getPageLinks","MobileReference","aria-hidden","previousPage","pagesRange","range","truncatedRange","unshift","splice","Set","page","i","Spacer","PageNumberBUtton","Component","paginationItemMixin","desktop_up","WorksList","works","selectedWork","useState","isOpen","setIsOpen","fill","useColorMode","hasSelectedWork","worksBlank","id","name","avatar","bio","worksPage","featured","color","worksWithDefaultAll","WorksContainer","onClick","CoWorksList","NameContainer","IconContainer","ToggleOpen","onOutsideClick","CoWorksListOpen","IconOpenContainer","ToggleClose","CoWorksListItemOpen","WorkLink","as","WorkNameOpen","background","colorModeTransition","secondary","HeadingContainer","WorkHero","setGridLayout","useStaticQuery","site","edges","node","siteMetadata","Section","HeroHeading","HeroHeadingLabel","HeroSubheading","hover","active","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype"],"mappings":"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","file":"f23517e21aa0a9cb7f533286e93897e24a3db344-67f8215becda9ac24339.js","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nimport Headings from '@components/Headings';\nimport Image, { ImagePlaceholder } from '@components/Image';\n\nimport mediaqueries from '@styles/media';\nimport { IProject } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\nimport ProjectCategories from \"../project/Project.Categories\";\nimport ProjectWorks from \"../project/Project.Works\";\n\n/**\n * Tiles\n * [FEATURED]\n * [SHORT], [LONG]\n * [SHORT], [SHORT], [SHORT]\n * [SHORT], [SHORT], [SHORT]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ProjectsListProps {\n  projects: IProject[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ProjectsListItemProps {\n  project: IProject;\n  narrow?: boolean;\n}\n\nconst ProjectsList: React.FC<ProjectsListProps> = ({\n                                                     projects,\n                                                     alwaysShowAllDetails,\n                                                   }) => {\n  if (!projects) return null;\n\n  const hasOnlyOneProject = projects.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  /**\n   * We're taking the flat array of projects [{}, {}, {}...]\n   * and turning it into an array of pairs of projects [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  //const latestProject = projects[0];\n  //console.log('Projects List latestProject', latestProject);\n\n  const projectPairs = projects.reduce((result, value, index, array) => {\n    //console.log('Projects List projectPairs result', result);\n    // console.log('Projects List projectPairs value', value);\n    // console.log('Projects List projectPairs index', index);\n    // console.log('Projects List projectPairs array', array);\n\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []);\n  //console.log('Projects List projectPairs', projectPairs);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ProjectsListContainer\n      style={{ opacity: hasSetGridLayout ? 1 : 0 }}\n      alwaysShowAllDetails={alwaysShowAllDetails}\n    >\n      {projectPairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        //console.log('Projects List ap', ap);\n\n        return (\n          <List\n            key={index}\n            gridLayout={gridLayout}\n            hasOnlyOneProject={hasOnlyOneProject}\n            reverse={isOdd}\n          >\n            <ListItem project={ap[0]} narrow={isOdd} />\n            <ListItem project={ap[1]} narrow={isEven} />\n          </List>\n        );\n      })}\n    </ProjectsListContainer>\n  );\n};\n\nexport default ProjectsList;\n\nconst ListItem: React.FC<ProjectsListItemProps> = ({ project, narrow }) => {\n  if (!project) return null;\n\n  //const { gridLayout } = useContext(GridLayoutContext);\n  let gridLayout = 'rows';\n  const hasOverflow = narrow && project.title.length > 35;\n  const imageSource = narrow ? project.hero.narrow : project.hero.regular;\n  const hasHeroImage =\n    imageSource &&\n    Object.keys(imageSource).length !== 0 &&\n    imageSource.constructor === Object;\n\n  return (\n    <ProjectLink to={project.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <ProjectContent\n          gridLayout={gridLayout}>\n          <ProjectTaxonomy\n            gridLayout={gridLayout}>\n            <span className=\"Project__Works\">{project.work}</span>\n            <span className=\"Project__Date\">{project.date}</span>\n          </ProjectTaxonomy>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {project.title}\n          </Title>\n          <Excerpt\n            gridLayout={gridLayout}\n          >\n            {project.excerpt}\n          </Excerpt>\n          <MetaData\n            gridLayout={gridLayout}>\n            <span className=\"Project__Categories\">{project.categories}</span>\n          </MetaData>\n        </ProjectContent>\n      </Item>\n    </ProjectLink>\n  );\n};\n\nconst wide = '3fr';\nconst narrow = '2fr';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  //display: -webkit-box;\n  display: inline;\n  white-space: normal;\n  overflow: hidden;\n  //min-height: 84px;\n  margin-bottom: 25px;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ProjectsListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\n// const listTile = p => css`\n//   position: relative;\n//   display: grid;\n//   grid-template-columns: ${p.reverse\n//   ? `${narrow} ${wide}`\n//   : `${wide} ${narrow}`};\n//   grid-template-rows: 2;\n//   column-gap: 30px;\n//\n//   &:not(:last-child) {\n//     margin-bottom: 35px;\n//   }\n//\n//   ${mediaqueries.desktop_medium`\n//     grid-template-columns: 1fr 1fr;\n//   `}\n//\n//   ${mediaqueries.tablet`\n//     grid-template-columns: 1fr;\n//\n//     &:not(:last-child) {\n//       margin-bottom: 0;\n//     }\n//   `}\n// `;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  //grid-template-columns: 1fr 488px;\n  //grid-column-gap: 96px;\n  //grid-template-columns: 1fr 570px;\n  grid-template-columns: 1fr 460px;\n  grid-column-gap: 0;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 30px;\n  `}\n`;\n\n// If only 1 project, dont create 2 rows.\nconst listRow = p => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneProject ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneProject: boolean;\n}>`\n  ${listRow}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${listItemRow}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '370px' : '380px')};\n  overflow: hidden;\n  z-index: 300;\n  display: block;\n\n  & > div {\n    height: 100%;\n    transition: transform 0.3s var(--ease-out-quad),\n    scale 0.3s var(--ease-out-quad);\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    //margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n  `}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 28px;\n  font-weight: 400;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-transform: uppercase;\n  margin-bottom: ${p =>\n  p.hasOverflow && p.gridLayout === 'tiles' ? '25px' : '10px'};\n  ${limitToTwoLines};\n  background-size: 0 100%;\n  background-repeat: no-repeat;\n  text-decoration: none;\n  -webkit-transition: background-size .8s ease;\n  transition: background-size .8s ease;\n  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(99%,transparent),color-stop(1%,${p => p.theme.colors.primary}));\n  background-image: linear-gradient(180deg,transparent 99%,${p => p.theme.colors.primary} 0);\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;\n    padding: 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  display: block;\n  margin-top: 5px;\n  font-size: 16px;\n  line-height: 26px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: 30px;\n  color: ${p => p.theme.colors.grey};\n  max-width: 500px;\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom; 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst ProjectContent = styled.div<{\n  gridLayout: string;\n}>`\n  padding: 30px;\n  background: ${p => p.theme.colors.card};\n  //margin:  ${p => (p.gridLayout === 'tiles' ? '-150px 30px 20px 30px' : '110px 0 -30px -100px')};\n  //margin:  ${p => (p.gridLayout === 'tiles' ? '-100px 30px 20px 30px' : '110px -100px -30px 0')};\n  //min-height: ${p => (p.gridLayout === 'tiles' ? 'unset' : '330px')};\n  //margin: 140px 0 0px -100px;\n  margin: 80px 0 0px -100px;\n  z-index: 600;\n  display: block;\n  position: relative;\n  //border: 1px solid ${p => p.theme.colors.primary};\n\n  ${mediaqueries.tablet`\n    margin: 0 auto;\n    width: 100%;\n  `}\n`;\n\nconst MetaData = styled.div<{\n  gridLayout: string;\n}>`\n  font-weight: 400;\n  font-size: 12px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.primary};\n  letter-spacing: 2px;\n  margin-top: ${p => (p.gridLayout === 'tiles' ? '20px' : '10px')};\n  //opacity: 0.5;\n  //font-style: italic;\n\n  .Project__Categories{\n    color: ${p => p.theme.colors.card};\n    background: ${p => p.theme.colors.primary};\n    display: inline;\n    padding: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding: 0;\n  `}\n`;\n\nconst ProjectTaxonomy = styled.div<{\n  gridLayout: string;\n}>`\n  font-weight: 600;\n  font-size: 12px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  text-transform: uppercase;\n  opacity: 0.8;\n  letter-spacing: 2px;\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '20px' : '20px')};\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n\n  .Project__Works{\n    margin-right: 5px;\n    color: ${p => p.theme.colors.lightGrey};\n    margin-left: 1px;\n  }\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding: 0;\n  `}\n`;\n\nconst ProjectLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n  //border-bottom: 5px solid ${p => p.theme.colors.primary};\n\n  &:hover ${ImageContainer} > div, &:focus ${ImageContainer} > div{\n      0 30px 50px -30px rgba(0, 0, 0, 0.3);\n    transform: scale(1.1);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    //color: ${p => p.theme.colors.accent};\n    background-size: 100% 100%;\n    cursor: pointer;\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    //border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n","import styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\n\nimport mediaqueries from \"@styles/media\";\n\n/**\n * Example:\n * <Heading.h1>Lorem Ipsum</Heading.h1>\n */\n\nconst commonStyles = p => css`\n  font-weight: bold;\n  color: ${p.theme.colors.primary};\n  font-family: ${p.theme.fonts.serif};\n`;\n\nconst h1 = styled.h1`\n  word-break: keep-all;\n  font-size: 52px;\n  line-height: 1.15;\n  ${commonStyles};\n\n  ${mediaqueries.desktop`\n    font-size: 38px;\n    line-height: 1.2;\n  `};\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n    line-height: 1.3;\n  `};\n`;\n\nconst h2 = styled.h2`\n  word-break: keep-all;\n  font-size: 32px;\n  line-height: 1.333;\n  ${commonStyles};\n\n  ${mediaqueries.desktop`\n    font-size: 32px;\n  `};\n\n  ${mediaqueries.tablet`\n    font-size: 24px;\n    line-height: 1.45;\n  `};\n\n  ${mediaqueries.phablet`\n    font-size: 22px;\n  `};\n`;\n\nconst h3 = styled.h3`\n  word-break: keep-all;\n  font-size: 24px;\n  line-height: 1.45;\n  ${commonStyles};\n\n  ${mediaqueries.tablet`\n    font-size: 22px;\n  `};\n\n  ${mediaqueries.phablet`\n    font-size: 20px;\n  `};\n`;\n\nconst h4 = styled.h4`\n  word-break: keep-all;\n  font-size: 18px;\n  line-height: 1.45;\n  ${commonStyles};\n\n  ${mediaqueries.phablet`\n    font-size: 16px;\n  `};\n`;\n\nconst h5 = styled.h5`\n  word-break: keep-all;\n  font-size: 18px;\n  line-height: 1.45;\n  ${commonStyles};\n\n  ${mediaqueries.phablet`\n    font-size: 16px;\n  `};\n`;\n\nconst h6 = styled.h6`\n  word-break: keep-all;\n  font-size: 16px;\n  line-height: 1.45;\n  ${commonStyles};\n\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `};\n`;\n\nexport default {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n};\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport mediaqueries from \"@styles/media\";\nimport { range } from \"@utils\";\n\nimport { IPaginator } from \"@types\";\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n  count = this.props.pageCount;\n  current = this.props.index;\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const current = this.current;\n    const count = this.count;\n    const maxPages = this.maxPages;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(\n        pagesRange.length - 1 - maxPages,\n        0,\n        pagesRange[0] - 1,\n      );\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden={true} />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === \"/\") {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"page/\" + n;\n    } else {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"/page/\" + n;\n    }\n  };\n\n  render() {\n    const count = this.count;\n    const current = this.current;\n\n    if (count <= 1) return null;\n\n    const previousPath = this.previousPath;\n    const nextPath = this.nextPath;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n\nconst paginationItemMixin = p => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 16px;\n  text-decoration: none;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: \"...\";\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.primary};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { useColorMode } from \"theme-ui\";\n\nimport Image from '@components/Image';\nimport { IWork } from '@types';\nimport Icons from \"@icons\";\nimport mediaqueries from \"@styles/media\";\n\nconst WorksList: React.FC<IWork> = ({ works, selectedWork }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [colorMode] = useColorMode();\n\n  const fill = colorMode === \"dark\" ? \"#fff\" : \"#000\";\n\n  const hasSelectedWork = Object.keys(selectedWork).length;\n\n  const worksBlank = {\n    id: 0,\n    name: 'projects I worked on',\n    avatar: '',\n    bio: '',\n    slug: '/projects',\n    worksPage: true,\n    featured: false,\n    color: ''\n  };\n\n  const worksWithDefaultAll = [ worksBlank, ...works ];\n\n  return (\n    <WorksContainer onClick={() => setIsOpen(!isOpen)} isOpen={isOpen}>\n      {/*{ selectedWork.avatar &&*/}\n      {/*  <WorkBackground src={selectedWork.avatar.large} />*/}\n      {/*}*/}\n      <CoWorksList /*style={listWidth}*/>\n        {/*{works.map((work, index) => (*/}\n        {/*  <CoWorkAvatar style={{ left: `${index * 15}px` }} key={work.name}>*/}\n        {/*    <RoundedImage src={work.avatar.small} />*/}\n        {/*  </CoWorkAvatar>*/}\n        {/*))}*/}\n      </CoWorksList>\n      <NameContainer>{ hasSelectedWork ? (`${selectedWork.name} projects`) : worksBlank.name}</NameContainer>\n      <IconContainer>\n        <Icons.ToggleOpen fill={fill} />\n      </IconContainer>\n\n\n      {isOpen && (\n        <OutsideClickHandler onOutsideClick={() => setIsOpen(!isOpen)}>\n          <CoWorksListOpen>\n            <IconOpenContainer>\n              <Icons.ToggleClose fill={fill} />\n            </IconOpenContainer>\n            {worksWithDefaultAll.map((work, index) => (\n              <CoWorksListItemOpen key={work.name}>\n                <WorkLink\n                  as={work.worksPage ? Link : \"div\"}\n                  to={work.slug}\n                >\n                  {/*<CoWorkAvatarOpen>*/}\n                  {/*  <RoundedImage src={work.avatar.small} />*/}\n                  {/*</CoWorkAvatarOpen>*/}\n                  <WorkNameOpen>{work.name}</WorkNameOpen>\n                </WorkLink>\n              </CoWorksListItemOpen>\n            ))}\n          </CoWorksListOpen>\n        </OutsideClickHandler>\n      )}\n\n      {/*{works.map((work, index) => {*/}\n      {/*  //return console.log('work', work);*/}\n      {/*  console.log('work.color', work.color);*/}\n      {/*  return (*/}\n      {/*    <WorkContainer key={index} color={work.color}>*/}\n      {/*      <WorksAvatar*/}\n      {/*        as={work.worksPage ? Link : 'div'}*/}\n      {/*        to={work.slug}*/}\n      {/*      >*/}\n      {/*        <WorksAvatarInner>*/}\n      {/*          <RoundedImage*/}\n      {/*            isEven={index % 2 == 0}*/}\n      {/*            src={work.avatar.large}*/}\n      {/*          />*/}\n      {/*        </WorksAvatarInner>*/}\n      {/*      </WorksAvatar>*/}\n      {/*      <div>*/}\n      {/*        { work.id == selectedWork.id ? 'SELECTED TOPIC' : 'not selected'}*/}\n      {/*      </div>*/}\n      {/*      <WorksText dangerouslySetInnerHTML={{ __html: work.name }} />*/}\n      {/*    </WorkContainer>*/}\n      {/*  );*/}\n      {/*})}*/}\n    </WorksContainer>\n  );\n};\n\nexport default WorksList;\n\n// const WorksContainer = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-gap: 16px;\n//   //grid-template-columns: repeat(auto-fill,minmax(150px,215px));\n//   //grid-template-columns: repeat(auto-fill,minmax(200px,365px));\n//   grid-template-columns: repeat(auto-fill,minmax(250px,265px));\n//   justify-content: center;\n// `;\n\nconst WorksContainer = styled.div<{ isOpen: boolean }>`\n  position: relative;\n  //display: flex;\n  display: inline-block;\n  align-items: center;\n  //font-size: 18px;\n  color: ${p => p.theme.colors.grey};\n  letter-spacing: 1px;\n  cursor: pointer;\n  vertical-align: middle;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: -20px;\n    right: -20px;\n    top: -16px;\n    bottom: -16px;\n    background: ${p => p.theme.colors.card};\n    box-shadow: ${p =>\n  p.isOpen ? \"none\" : \" 0px 0px 15px rgba(0, 0, 0, 0.1)\"};\n    border-radius: 5px;\n    z-index: 0;\n    transition: opacity 0.3s;\n    cursor: pointer;\n    opacity: 0;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n\n\n  ${mediaqueries.phablet`\n    //font-size: 14px;\n    align-items: center;\n\n    &::before {\n      box-shadow: none;\n      bottom: -30px;\n      background: transparent;\n    }\n\n    strong {\n      display: block;\n      font-weight: semi-bold;\n      margin-top: 6px;\n    }\n  `}\n`;\n\nconst WorkContainer = styled.div<{ color: string }>`\n  position: relative;\n  display: flex;\n  height: 304px;\n  cursor: pointer;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  border-radius: 7px;\n  padding: 24px 0;\n  background-color: #${p => p.color};\n  background-repeat: no-repeat;\n  background-size: 100%;\n  border: 1px solid rgba(29,29,29,.1);\n  overflow: hidden;\n`;\n\nconst WorksAvatar = styled.div`\n  display: block;\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nconst RoundedImage = styled(Image)<{ isEven: boolean }>`\n  height: 180px;\n\n  img {\n    object-position: ${p => p.isEven ? `left` : `right`} !important;\n    //object-position: right !important;\n  }\n`;\n\nconst WorkBackground = styled(Image)<{ isEven: boolean }>`\n  width: 300px;\n  position: absolute !important;\n  left: -20vw;\n  top: -30px;\n  z-index: 0;\n  display: block;\n  filter: grayscale(100%);\n}\n`;\n\nconst WorksAvatarInner = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst WorksText = styled.p`\n  max-width: 430px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  text-align: left;\n  padding: 0 60px 0 30px;\n  font-weight: bold;\n  display: block;\n  //opacity: 0.5;\n  line-height: 1.45;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  //color: ${p => p.theme.colors.grey};\n\n  a {\n    //color: ${p => p.theme.colors.grey};\n    text-decoration: underline;\n  }\n`;\n\n\nconst NameContainer = styled.strong`\n  position: relative;\n  //max-width: 260px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n  //font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  border-bottom: 5px solid;\n  //text-transform: uppercase;\n  //font-size: 14px;\n  font-weight: 400;\n  display: inline-block;\n  margin-top: 4px;\n  vertical-align: middle;\n\n  // ${mediaqueries.desktop`\n  //   max-width: 170px;\n  // `}\n  //\n  // ${mediaqueries.phablet`\n  //   max-width: 200px;\n  // `}\n`;\n\nconst IconContainer = styled.div`\n  position: relative;\n  cursor: pointer;\n  margin-left: 10px;\n  display: inline-block;\n\n  svg{\n    width: 30px;\n    height: 30px;\n  }\n\n  ${mediaqueries.phablet`\n    position: absolute;\n    right: -30px;\n    bottom: 0px;\n    top: 3px;\n    height: 100%;\n  `}\n`;\n\nconst IconOpenContainer = styled.div`\n  position: absolute;\n  cursor: pointer;\n  top: -10px;\n  right: 21px;\n\n  ${mediaqueries.desktop`\n    top: 10px;\n  `}\n\n  ${mediaqueries.phablet`\n    top: 20px;\n  `}\n\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n\n\nconst CoWorksList = styled.div`\n  position: relative;\n  //height: 25px;\n  //margin-right: 15px;\n  width: auto;\n  min-width: 300px;\n\n  ${mediaqueries.phablet`\n    display: none;\n  `}\n`;\n\n\nconst CoWorksListOpen = styled.ul`\n  position: absolute;\n  z-index: 2;\n  left: -21px;\n  right: -21px;\n  //top: -19px;\n  top: 105px;\n  padding: 50px;\n  background: ${p => p.theme.colors.card};\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  cursor: pointer;\n  list-style: none;\n  transform: translateY(-2px);\n  max-height: 500px;\n  overflow-y: scroll;\n  display: grid;\n  //width: 100%;\n  grid-gap: 16px;\n  grid-template-columns: repeat(auto-fill,minmax(150px,300px));\n\n  ${mediaqueries.desktop`\n    display: block;\n    left: 0;\n  `}\n\n  ${mediaqueries.phablet`\n    width: 280px;\n    padding: 30px;\n    top: 45px;\n  `}\n`;\n\nconst CoWorksListItemOpen = styled.li`\n  a {\n    width: 100%;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst CoWorkAvatarOpen = styled.div`\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  margin-right: 15px;\n  background: ${p => p.theme.colors.grey};\n  overflow: hidden;\n  pointer-events: none;\n\n  .gatsby-image-wrapper > div {\n    padding-bottom: 100% !important;\n    overflow: hidden;\n  }\n`;\n\nconst CoWorkAvatar = styled.div`\n  position: absolute;\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  z-index: 1;\n  background: ${p => p.theme.colors.grey};\n  box-shadow: 0 0 0 2px ${p => p.theme.colors.background};\n  transition: box-shadow 0.25s ease;\n  overflow: hidden;\n  pointer-events: none;\n\n  .gatsby-image-wrapper > div {\n    padding-bottom: 100% !important;\n    overflow: hidden;\n  }\n\n  ${mediaqueries.phablet`\n    display: none;\n  `}\n`;\n\nconst WorkLink = styled.div`\n  display: flex;\n  align-items: center;\n  color: inherit;\n  margin-left: 10px;\n  letter-spacing: 1px;\n\n  strong {\n    transition: ${p => p.theme.colorModeTransition};\n  }\n\n  &:hover strong {\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst WorkNameOpen = styled.strong`\n  position: relative;\n  cursor: pointer;\n  color: ${p => p.theme.colors.secondary};\n  font-weight: 400;\n  font-size: 16px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  padding-bottom: 3px;\n\n  &:hover{\n    padding-bottom: 1px;\n    border-bottom: 1px solid ${p => p.theme.colors.primary};\n  }\n`;\n\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Work from '@components/Work';\nimport WorksList from '@components/WorksList';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IWork } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\n\nconst workQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst WorkHero: React.FC<IWork> = ({ works, work }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n\n  const results = useStaticQuery(workQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  //const featuredWork = works.find(work => work.featured);\n\n  // if (!featuredWork) {\n  //   throw new Error(`\n  //     No featured Work found.\n  //     Please ensure you have at least featured Work.\n  // `);\n  // }\n\n  return (\n    <Section narrow id=\"Projects__Hero\">\n      <HeadingContainer>\n        {/*<HeroHeading dangerouslySetInnerHTML={{ __html: 'Explore works I post about' }} />*/}\n        <HeroHeading>\n          <HeroHeadingLabel>Explore</HeroHeadingLabel>\n          <WorksList works={works} selectedWork={work} />\n        </HeroHeading>\n        <HeroSubheading>\n          <strong>Disclaimer:</strong> All information and materials posted here are available to the public and are copyrighted by their respective owners. There is no intended claim of ownership to any of the materials posted in this page and is for the sole purpose of showcasing the skills and previous works of the developer as part of their portfolio.\n        </HeroSubheading>\n      </HeadingContainer>\n      {/*<SubheadingContainer>*/}\n        {/*<Work works={works} />*/}\n        {/*<GridControlsContainer>*/}\n        {/*  <GridButton*/}\n        {/*    onClick={() => setGridLayout('tiles')}*/}\n        {/*    active={tilesIsActive}*/}\n        {/*    data-a11y=\"false\"*/}\n        {/*    title=\"Show project in Tile grid\"*/}\n        {/*    aria-label=\"Show project in Tile grid\"*/}\n        {/*  >*/}\n        {/*    <Icons.Tiles />*/}\n        {/*  </GridButton>*/}\n        {/*  <GridButton*/}\n        {/*    onClick={() => setGridLayout('rows')}*/}\n        {/*    active={!tilesIsActive}*/}\n        {/*    data-a11y=\"false\"*/}\n        {/*    title=\"Show project in Row grid\"*/}\n        {/*    aria-label=\"Show project in Row grid\"*/}\n        {/*  >*/}\n        {/*    <Icons.Rows />*/}\n        {/*  </GridButton>*/}\n        {/*</GridControlsContainer>*/}\n      {/*</SubheadingContainer>*/}\n    </Section>\n  );\n};\n\nexport default WorkHero;\n\nconst SubheadingContainer = styled.div`\n  // display: flex;\n  // align-items: center;\n  // justify-content: space-between;\n  // margin-bottom: 100px;\n  padding: 20px 0;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 110px;\n  margin: 0 auto;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  //margin: 100px 0;\n  margin: 80px 0 60px 0;\n  display: inline-block;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n\n  ${mediaqueries.phablet`\n    margin: 60px 0 80px 0;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 80px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n  vertical-align: middle;\n  display: table-cell;\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 24px;\n  `}\n`;\n\nconst HeroSubheading = styled.span`\n  display: block;\n  font-style: normal;\n  // font-weight: 600;\n  font-size: 14px;\n  // margin-right: 35px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n  // font-family: ${p => p.theme.fonts.serif};\n  text-align: left;\n  // text-transform: uppercase;\n  margin-top: 20px;\n  letter-spacing: 0.5px;\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 28px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 16px;\n  `}\n`;\n\nconst HeroHeadingLabel = styled.span`\n   vertical-align: middle;\n   margin-right: 15px;\n\n  ${mediaqueries.phablet`\n    margin-right: 8px;\n    display: block;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}"],"sourceRoot":""}