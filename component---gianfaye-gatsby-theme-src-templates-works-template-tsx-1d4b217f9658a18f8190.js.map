{"version":3,"sources":["webpack:///../@gianfaye/gatsby-theme/src/components/Topics/Topics.tsx","webpack:///../@gianfaye/gatsby-theme/src/sections/topics/Topics.List.tsx","webpack:///../@gianfaye/gatsby-theme/src/templates/works.template.tsx"],"names":["Topics","topics","TopicsContainer","map","topic","index","TopicContainer","key","color","TopicsAvatar","as","topicsPage","Link","to","slug","TopicsAvatarInner","RoundedImage","isEven","src","avatar","large","TopicsText","dangerouslySetInnerHTML","__html","name","p","theme","colors","primary","accent","Image","fonts","sansSerif","card","TopicsHero","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","site","edges","node","siteMetadata","hero","Section","relative","id","HeadingContainer","HeroHeading","HeroHeadingLabel","mediaqueries","desktop","tablet","phablet","hover","active","TopicsPage","location","pageContext","group","additionalContext","pathname","gradient","colorModeTransition","show"],"mappings":"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","file":"component---gianfaye-gatsby-theme-src-templates-works-template-tsx-1d4b217f9658a18f8190.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Image from '@components/Image';\nimport { ITopic } from '@types';\n\nconst Topics: React.FC<ITopic> = ({ topics }) => {\n  return (\n    <TopicsContainer>\n      {topics && topics.map((topic, index) => {\n        return (\n          <TopicContainer key={index} color={topic.color}>\n            <TopicsAvatar\n              as={topic.topicsPage ? Link : 'div'}\n              to={topic.slug}\n            >\n              <TopicsAvatarInner>\n                <RoundedImage\n                  isEven={index % 2 == 0}\n                  src={topic.avatar.large}\n                />\n              </TopicsAvatarInner>\n            </TopicsAvatar>\n            <TopicsText dangerouslySetInnerHTML={{ __html: topic.name }} />\n          </TopicContainer>\n        );\n      })}\n    </TopicsContainer>\n  );\n};\n\nexport default Topics;\n\nconst TopicsContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 26px;\n  //grid-template-columns: repeat(auto-fill,minmax(150px,215px));\n  //grid-template-columns: repeat(auto-fill,minmax(200px,365px));\n  grid-template-columns: repeat(auto-fill,minmax(250px,265px));\n  justify-content: center;\n`;\n\nconst TopicContainer = styled.div<{ color: string }>`\n  position: relative;\n  display: flex;\n  //height: 304px;\n  cursor: pointer;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: baseline;\n  //border-radius: 7px;\n  //padding: 24px 0;\n  //background-color: #${p => p.color};\n  background-repeat: no-repeat;\n  background-size: 100%;\n  border-bottom: 3px solid ${p => p.theme.colors.primary};\n  overflow: hidden;\n`;\n\nconst TopicsAvatar = styled.div`\n  display: block;\n  position: relative;\n  //border-bottom: 3px solid ${p => p.theme.colors.primary};\n  //height: 100%;\n  width: 100%;\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nconst RoundedImage = styled(Image)<{ isEven: boolean }>`\n  height: 150px;\n  filter: grayscale(100%);\n\n  // img {\n  //   object-position: ${p => p.isEven ? `left` : `right`} !important;\n  //   //object-position: right !important;\n  // }\n`;\n\nconst TopicsAvatarInner = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst TopicsText = styled.p`\n  max-width: 430px;\n  font-size: 16px;\n  //margin-bottom: 20px;\n  text-transform: uppercase;\n  text-align: left;\n  //padding: 0 60px 0 30px;\n  font-weight: bold;\n  display: block;\n  //opacity: 0.5;\n  line-height: 1.45;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  letter-spacing: 1px;\n  margin-left: 2px;\n  //color: ${p => p.theme.colors.grey};\n  width: 100%;\n  padding: 20px;\n  background: ${p => p.theme.colors.card};\n  min-height: 83px;\n\n  a {\n    //color: ${p => p.theme.colors.grey};\n    text-decoration: underline;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Topics from '@components/Topics';\nimport TopicsList from '@components/TopicsList';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { ITopic } from '@types';\n\nimport { GridLayoutContext } from '../articles/Articles.List.Context';\n\nconst topicQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst TopicsHero: React.FC<ITopic> = ({ topics, topic }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n\n  const results = useStaticQuery(topicQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  //const featuredTopic = topics.find(topic => topic.featured);\n\n  // if (!featuredTopic) {\n  //   throw new Error(`\n  //     No featured Topic found.\n  //     Please ensure you have at least featured Topic.\n  // `);\n  // }\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer>\n        {/*<HeroHeading dangerouslySetInnerHTML={{ __html: 'Explore topics I post about' }} />*/}\n        <HeroHeading>\n          <HeroHeadingLabel>Topics</HeroHeadingLabel>\n          <Topics topics={topics}/>\n        </HeroHeading>\n      </HeadingContainer>\n      {/*<SubheadingContainer>*/}\n      {/*  /!*<Topics topics={topics} />*!/*/}\n      {/*  <GridControlsContainer>*/}\n      {/*    <GridButton*/}\n      {/*      onClick={() => setGridLayout('tiles')}*/}\n      {/*      active={tilesIsActive}*/}\n      {/*      data-a11y=\"false\"*/}\n      {/*      title=\"Show articles in Tile grid\"*/}\n      {/*      aria-label=\"Show articles in Tile grid\"*/}\n      {/*    >*/}\n      {/*      <Icons.Tiles />*/}\n      {/*    </GridButton>*/}\n      {/*    <GridButton*/}\n      {/*      onClick={() => setGridLayout('rows')}*/}\n      {/*      active={!tilesIsActive}*/}\n      {/*      data-a11y=\"false\"*/}\n      {/*      title=\"Show articles in Row grid\"*/}\n      {/*      aria-label=\"Show articles in Row grid\"*/}\n      {/*    >*/}\n      {/*      <Icons.Rows />*/}\n      {/*    </GridButton>*/}\n      {/*  </GridControlsContainer>*/}\n      {/*</SubheadingContainer>*/}\n    </Section>\n  );\n};\n\nexport default TopicsHero;\n\nconst SubheadingContainer = styled.div`\n  // display: flex;\n  // align-items: center;\n  // justify-content: space-between;\n  // margin-bottom: 100px;\n  padding: 20px 0;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 110px;\n  margin: 0 auto;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  //margin: 100px 0;\n  margin: 80px 0 100px 0;\n  display: inline-block;\n  width: 100%;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n\n  ${mediaqueries.phablet`\n    margin: 60px 0 80px 0;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 80px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n  //vertical-align: middle;\n  //display: table-cell;\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 24px;\n  `}\n`;\n\nconst HeroHeadingLabel = styled.span`\n  display: block;\n  vertical-align: middle;\n  margin-right: 15px;\n  margin-bottom: 100px;\n\n  ${mediaqueries.phablet`\n    margin-right: 8px;\n    display: block;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport SEO from \"@components/SEO\";\nimport Layout from \"@components/Layout\";\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\n\nimport TopicsHero from \"../sections/topics/Topics.List\";\nimport ArticlesList from \"../sections/articles/Articles.List\";\n\nimport { Template } from \"@types\";\n\nconst TopicsPage: Template = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const topics = pageContext.additionalContext.topics;\n  const selectedTopic = {};\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <TopicsHero topics={topics} topic={selectedTopic} />\n      {/*<ArticlesGradient />*/}\n    </Layout>\n  );\n};\n\nexport default TopicsPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n  text-align: center;\n`;\n"],"sourceRoot":""}